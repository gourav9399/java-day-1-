1.reverse number 
  public class WordReverser {
  public static void main(String[] args) {
    String word = "hello";
    String reversedWord = "";

    for (int i = word.length() - 1; i >= 0; i--) {
      reversedWord += word.charAt(i);
    }

    System.out.println("Reversed word: " + reversedWord);
  }
}

2. coverting string to integer
public class StringToInt {
    public static void main(String[] args) {
        String str = "1234";
        int num = Integer.parseInt(str);
        System.out.println("Output String: " + num);
    }
}

3.
import java.util.Scanner;
import java.util.regex.Pattern;

public class ValidateUsername {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Enter a username:");
        String username = scanner.nextLine();

        if (isValidUsername(username)) {
            System.out.println("Username is valid");
        } else {
            System.out.println("Username is not valid");
        }
    }

    public static boolean isValidUsername(String username) {
        String pattern = "^[a-zA-Z0-9_]{3,16}$";
        return Pattern.matches(pattern, username);
    }
}

4.

import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;

public class SortNames {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        ArrayList<String> names = new ArrayList<>();

        System.out.println("Enter the number of names:");
        int numNames = scanner.nextInt();
        scanner.nextLine(); // consume newline left-over

        System.out.println("Enter the names:");
        for (int i = 0; i < numNames; i++) {
            names.add(scanner.nextLine());
        }

        System.out.println("Do you want to sort in ascending (A) or descending (D) order?");
        char choice = scanner.next().charAt(0);

        if (choice == 'A' || choice == 'a') {
            Collections.sort(names);
            System.out.println("Sorted names in ascending order:");
        } else if (choice == 'D' || choice == 'd') {
            Collections.sort(names, Collections.reverseOrder());
            System.out.println("Sorted names in descending order:");
        } else {
            System.out.println("Invalid choice. Exiting.");
            return;
        }

        for (String name : names) {
            System.out.println(name);
        }
    }
}

5.
import java.util.Scanner;

public class SpecialCharacters {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Enter a line of text:");
        String line = scanner.nextLine();

        int specialCharCount = 0;
        System.out.print("Special characters: ");

        for (char c : line.toCharArray()) {
            if (!Character.isLetterOrDigit(c) &&!Character.isWhitespace(c)) {
                System.out.print(c + " ");
                specialCharCount++;
            }
        }

        System.out.println("\nNumber of special characters: " + specialCharCount);
    }
}

6.import java.util.Scanner;

public class VowelCounter {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a statement: ");
        String statement = scanner.nextLine();

        
        statement = statement.toLowerCase();

        
        int vowelCount = 0;

        
        for (int i = 0; i < statement.length(); i++) {
            char ch = statement.charAt(i);
            if (isVowel(ch)) {
                vowelCount++;
            }
        }

        
        System.out.println("Number of vowels: " + vowelCount);

       
        scanner.close();
    }

      public static boolean isVowel(char ch) {
        return ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u';
    }
}

7.import java.util.Scanner;

public class ConsonantsAndVowels {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

   
        System.out.print("Enter a word: ");
        String word = scanner.nextLine();

       
        word = word.toLowerCase();

       
        StringBuilder vowels = new StringBuilder();
        StringBuilder consonants = new StringBuilder();

       
        for (int i = 0; i < word.length(); i++) {
            char ch = word.charAt(i);
            if (isVowel(ch)) {
                vowels.append(ch);
            } else if (isConsonant(ch)) {
                consonants.append(ch);
            }
        }

            System.out.println("Vowels: " + vowels);
        System.out.println("Consonants: " + consonants);

             scanner.close();
    }

    
    public static boolean isVowel(char ch) {
        return ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u';
    }

    
    public static boolean isConsonant(char ch) {
        return (ch >= 'a' && ch <= 'z') && !isVowel(ch);
    }
}

8.import java.util.Scanner;

public class CharacterSearch {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

       
        System.out.print("Enter a string: ");
        String inputString = scanner.nextLine();

               System.out.print("Enter a character to search for: ");
        char searchChar = scanner.next().charAt(0);

       

        boolean found = false;


        for (int i = 0; i < inputString.length(); i++) {
            if (inputString.charAt(i) == searchChar) {
                found = true;
                System.out.println("Character '" + searchChar + "' found at index: " + i);
            }
        }


        if (!found) {
            System.out.println("Character '" + searchChar + "' is not present in the string.");
        }


        scanner.close();
    }
}

9.import java.util.Scanner;
import java.util.Arrays;
import java.util.Collections;

public class ReverseAlphabeticalOrder {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

              System.out.print("Enter a word: ");
        String word = scanner.nextLine();

        
        Character[] charArray = new Character[word.length()];
        for (int i = 0; i < word.length(); i++) {
            charArray[i] = word.charAt(i);
        }

              Arrays.sort(charArray, Collections.reverseOrder());

        
        StringBuilder sortedWord = new StringBuilder();
        for (char ch : charArray) {
            sortedWord.append(ch);
        }

               System.out.println("Word in reverse alphabetical order: " + sortedWord);

        
        scanner.close();
    }
}

10.import java.util.Scanner;

public class RemoveVowels {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        
        System.out.print("Enter a string: ");
        String inputString = scanner.nextLine();

        
        String resultString = removeVowels(inputString);

        
        System.out.println("String after removing vowels: " + resultString);

        
        scanner.close();
    }

    
    public static String removeVowels(String str) {
        StringBuilder result = new StringBuilder();

        
        for (int i = 0; i < str.length(); i++) {
            char ch = str.charAt(i);
            if (!isVowel(ch)) {
                result.append(ch);
            }
        }

        return result.toString();
    }

       public static boolean isVowel(char ch) {
        ch = Character.toLowerCase(ch);
        return ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u';
    }
}

  
